{"version":3,"sources":["../src/components/emoji-picker.tsx","../src/constants.ts","../src/utils/capitalize.ts","../src/utils/is-emoji-supported.ts","../src/utils/storage.ts","../src/utils/validate.ts","../src/data/emoji.ts","../src/utils/chunk.ts","../src/data/emoji-picker.ts","../src/hooks.ts","../src/utils/store.tsx","../src/store.ts","../src/utils/get-skin-tone-variations.ts","../src/utils/compare.ts","../src/utils/noop.ts","../src/utils/request-idle-callback.ts","../src/utils/use-layout-effect.ts","../src/utils/use-stable-callback.ts"],"sourcesContent":["import {\n  type ComponentProps,\n  type CSSProperties,\n  Fragment,\n  forwardRef,\n  memo,\n  type ChangeEvent as ReactChangeEvent,\n  type FocusEvent as ReactFocusEvent,\n  type MouseEvent as ReactMouseEvent,\n  type ReactNode,\n  type SyntheticEvent as ReactSyntheticEvent,\n  type UIEvent as ReactUIEvent,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { EMOJI_FONT_FAMILY } from \"../constants\";\nimport { getEmojiData, validateLocale, validateSkinTone } from \"../data/emoji\";\nimport { getEmojiPickerData } from \"../data/emoji-picker\";\nimport { useActiveEmoji, useSkinTone } from \"../hooks\";\nimport {\n  $activeEmoji,\n  $categoriesCount,\n  $categoriesRowsStartIndices,\n  $isEmpty,\n  $isLoading,\n  $rowsCount,\n  $search,\n  $skinTones,\n  createEmojiPickerStore,\n  type EmojiPickerStore,\n  EmojiPickerStoreProvider,\n  sameEmojiPickerRow,\n  useEmojiPickerStore,\n} from \"../store\";\nimport type {\n  EmojiData,\n  EmojiDataCategory,\n  EmojiDataEmoji,\n  EmojiPickerActiveEmojiProps,\n  EmojiPickerCategory,\n  EmojiPickerDataCategory,\n  EmojiPickerEmoji,\n  EmojiPickerEmptyProps,\n  EmojiPickerListCategoryHeaderProps,\n  EmojiPickerListComponents,\n  EmojiPickerListEmojiProps,\n  EmojiPickerListProps,\n  EmojiPickerListRowProps,\n  EmojiPickerLoadingProps,\n  EmojiPickerRootProps,\n  EmojiPickerSearchProps,\n  EmojiPickerSkinToneProps,\n  EmojiPickerSkinToneSelectorProps,\n  EmojiPickerViewportProps,\n  WithAttributes,\n} from \"../types\";\nimport { capitalize } from \"../utils/capitalize\";\nimport { shallow } from \"../utils/compare\";\nimport { noop } from \"../utils/noop\";\nimport { requestIdleCallback } from \"../utils/request-idle-callback\";\nimport { useCreateStore, useSelector, useSelectorKey } from \"../utils/store\";\nimport { useLayoutEffect } from \"../utils/use-layout-effect\";\nimport { useStableCallback } from \"../utils/use-stable-callback\";\n\nfunction EmojiPickerDataHandler({\n  emojiVersion,\n  emojibaseUrl,\n}: Pick<EmojiPickerRootProps, \"emojiVersion\" | \"emojibaseUrl\">) {\n  const [emojiData, setEmojiData] = useState<EmojiData | undefined>(undefined);\n  const store = useEmojiPickerStore();\n  const locale = useSelectorKey(store, \"locale\");\n  const columns = useSelectorKey(store, \"columns\");\n  const skinTone = useSelectorKey(store, \"skinTone\");\n  const search = useSelectorKey(store, \"search\");\n  const excludedEmojis = useSelectorKey(store, \"excludedEmojis\");\n  const customCategories = useSelectorKey(store, \"customCategories\");\n  const customEmojis = useSelectorKey(store, \"customEmojis\");\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    getEmojiData({ locale, emojiVersion, emojibaseUrl, signal })\n      .then((data) => {\n        if (customCategories === undefined && customEmojis === undefined) {\n          return setEmojiData(data);\n        }\n\n        let categories: Array<EmojiDataCategory>;\n\n        if (customCategories !== undefined && customCategories.length !== 0) {\n          categories = customCategories.map((customCategory) => ({\n            index: customCategory.index,\n            label: capitalize(customCategory.label),\n            isCustom: true,\n          }));\n\n          categories = categories.concat(data.categories);\n        } else {\n          categories = data.categories;\n        }\n\n        let emojis: Array<EmojiDataEmoji>;\n\n        if (customEmojis !== undefined && customEmojis.length !== 0) {\n          emojis = customEmojis.map((customEmoji) => ({\n            emoji: customEmoji.emoji,\n            category: customEmoji.category,\n            version: 0,\n            label: capitalize(customEmoji.label),\n            tags: customEmoji.tags ?? [],\n            countryFlag: undefined,\n            skins: undefined,\n            isCustom: true,\n          }));\n\n          emojis = emojis.concat(data.emojis);\n        } else {\n          emojis = data.emojis;\n        }\n\n        setEmojiData({\n          ...data,\n          categories,\n          emojis,\n        });\n      })\n      .catch((error) => {\n        if (!signal.aborted) {\n          console.error(error);\n        }\n      });\n\n    return () => {\n      controller.abort();\n    };\n  }, [emojiVersion, emojibaseUrl, locale, customCategories, customEmojis]);\n\n  useEffect(() => {\n    if (!emojiData) {\n      return;\n    }\n\n    return requestIdleCallback(\n      () => {\n        store\n          .get()\n          .onDataChange(\n            getEmojiPickerData(\n              emojiData,\n              columns,\n              skinTone,\n              search,\n              excludedEmojis,\n            ),\n          );\n      },\n      { timeout: 100 },\n    );\n  }, [emojiData, columns, skinTone, search, excludedEmojis]);\n\n  return null;\n}\n\n/**\n * Surrounds all the emoji picker parts.\n *\n * @example\n * ```tsx\n * <EmojiPicker.Root onEmojiSelect={({ emoji }) => console.log(emoji)}>\n *   <EmojiPicker.Search />\n *   <EmojiPicker.Viewport>\n *     <EmojiPicker.List />\n *   </EmojiPicker.Viewport>\n * </EmojiPicker.Root>\n * ```\n *\n * Options affecting the entire emoji picker are available on this\n * component as props.\n *\n * @example\n * ```tsx\n * <EmojiPicker.Root locale=\"fr\" columns={10} skinTone=\"medium\">\n *   {\\/* ... *\\/}\n * </EmojiPicker.Root>\n * ```\n */\nconst EmojiPickerRoot = forwardRef<HTMLDivElement, EmojiPickerRootProps>(\n  (\n    {\n      locale = \"en\",\n      columns = 9,\n      skinTone = \"none\",\n      onEmojiSelect = noop,\n      emojiVersion,\n      emojibaseUrl,\n      onFocusCapture,\n      onBlurCapture,\n      children,\n      style,\n      sticky = true,\n      excludedEmojis,\n      customCategories,\n      customEmojis,\n      ...props\n    },\n    forwardedRef,\n  ) => {\n    const stableOnEmojiSelect = useStableCallback(onEmojiSelect);\n    const store = useCreateStore(() =>\n      createEmojiPickerStore(\n        stableOnEmojiSelect,\n        validateLocale(locale),\n        columns,\n        sticky,\n        validateSkinTone(skinTone),\n        excludedEmojis,\n        customCategories,\n        customEmojis,\n      ),\n    );\n    const [isFocusedWithin, setFocusedWithin] = useState(false);\n    const ref = useRef<HTMLDivElement>(null!);\n    const callbackRef = useCallback((element: HTMLDivElement | null) => {\n      if (element) {\n        ref.current = element;\n        store.set({ rootRef: ref });\n      }\n    }, []);\n\n    useLayoutEffect(() => {\n      store.set({ locale: validateLocale(locale) });\n    }, [locale]);\n\n    useLayoutEffect(() => {\n      store.set({ columns });\n    }, [columns]);\n\n    useLayoutEffect(() => {\n      store.set({ sticky });\n    }, [sticky]);\n\n    useLayoutEffect(() => {\n      store.set({ skinTone: validateSkinTone(skinTone) });\n    }, [skinTone]);\n\n    useLayoutEffect(() => {\n      store.set({ excludedEmojis });\n    }, [excludedEmojis]);\n\n    useLayoutEffect(() => {\n      store.set({ customCategories });\n    }, [customCategories]);\n\n    useLayoutEffect(() => {\n      store.set({ customEmojis });\n    }, [customEmojis]);\n\n    const handleFocusCapture = useCallback(\n      (event: ReactFocusEvent<HTMLDivElement>) => {\n        onFocusCapture?.(event);\n\n        const { searchRef, viewportRef } = store.get();\n\n        const isSearch =\n          event.target === searchRef?.current ||\n          event.target.hasAttribute(\"frimousse-search\");\n\n        const isViewport =\n          event.target === viewportRef?.current ||\n          event.target.hasAttribute(\"frimousse-viewport\");\n\n        if (!event.isDefaultPrevented()) {\n          setFocusedWithin(isSearch || isViewport);\n\n          if (!event.isDefaultPrevented()) {\n            setFocusedWithin(isSearch || isViewport);\n\n            if (isViewport) {\n              store.get().onActiveEmojiChange(\"keyboard\", 0, 0);\n            } else if (isSearch && store.get().search === \"\") {\n              store.set({ interaction: \"none\" });\n            }\n          }\n        }\n      },\n      [onFocusCapture],\n    );\n\n    const handleBlurCapture = useCallback(\n      (event: ReactFocusEvent<HTMLDivElement>) => {\n        onBlurCapture?.(event);\n\n        if (\n          !event.isDefaultPrevented() &&\n          !event.currentTarget.contains(event.relatedTarget)\n        ) {\n          setFocusedWithin(false);\n        }\n      },\n      [onBlurCapture],\n    );\n\n    useLayoutEffect(() => {\n      if (!isFocusedWithin) {\n        store.get().onActiveEmojiReset();\n      }\n    }, [isFocusedWithin]);\n\n    useImperativeHandle(forwardedRef, () => ref.current);\n\n    useEffect(() => {\n      if (!isFocusedWithin) {\n        return;\n      }\n\n      function handleKeyDown(event: KeyboardEvent) {\n        if (\n          event.defaultPrevented ||\n          (!event.key.startsWith(\"Arrow\") && event.key !== \"Enter\")\n        ) {\n          return;\n        }\n\n        const {\n          data,\n          onEmojiSelect,\n          onActiveEmojiChange,\n          interaction,\n          activeColumnIndex,\n          activeRowIndex,\n        } = store.get();\n\n        // Select the active emoji with enter if it exists\n        if (event.key === \"Enter\") {\n          const activeEmoji = $activeEmoji(store.get());\n\n          if (activeEmoji) {\n            event.preventDefault();\n\n            onEmojiSelect(activeEmoji);\n          }\n        }\n\n        // Move the active emoji with arrow keys\n        if (event.key.startsWith(\"Arrow\")) {\n          let columnIndex = activeColumnIndex;\n          let rowIndex = activeRowIndex;\n\n          event.preventDefault();\n\n          if (interaction !== \"none\") {\n            if (data?.rows && data.rows.length > 0) {\n              switch (event.key) {\n                case \"ArrowLeft\": {\n                  if (columnIndex === 0) {\n                    const previousRowIndex = rowIndex - 1;\n                    const previousRow = data.rows[previousRowIndex];\n\n                    // If first column, move to last column of previous row (if available)\n                    if (previousRow) {\n                      rowIndex = previousRowIndex;\n                      columnIndex = previousRow.emojis.length - 1;\n                    }\n                  } else {\n                    // Otherwise, move to previous column\n                    columnIndex -= 1;\n                  }\n\n                  break;\n                }\n\n                case \"ArrowRight\": {\n                  if (columnIndex === data.rows[rowIndex]!.emojis.length - 1) {\n                    const nextRowIndex = rowIndex + 1;\n                    const nextRow = data.rows[nextRowIndex];\n\n                    // If last column, move to first column of next row (if available)\n                    if (nextRow) {\n                      rowIndex = nextRowIndex;\n                      columnIndex = 0;\n                    }\n                  } else {\n                    // Otherwise, move to next column\n                    columnIndex += 1;\n                  }\n\n                  break;\n                }\n\n                case \"ArrowUp\": {\n                  const previousRow = data.rows[rowIndex - 1];\n\n                  // If not first row, move to previous row\n                  if (previousRow) {\n                    rowIndex -= 1;\n\n                    // If previous row doesn't have the same column, move to last column of previous row\n                    if (!previousRow.emojis[columnIndex]) {\n                      columnIndex = previousRow.emojis.length - 1;\n                    }\n                  }\n\n                  break;\n                }\n\n                case \"ArrowDown\": {\n                  const nextRow = data.rows[rowIndex + 1];\n\n                  // If not last row, move to next row\n                  if (nextRow) {\n                    rowIndex += 1;\n\n                    // If next row doesn't have the same column, move to last column of next row\n                    if (!nextRow.emojis[columnIndex]) {\n                      columnIndex = nextRow.emojis.length - 1;\n                    }\n                  }\n\n                  break;\n                }\n              }\n            }\n\n            onActiveEmojiChange(\"keyboard\", columnIndex, rowIndex);\n          } else {\n            onActiveEmojiChange(\"keyboard\", 0, 0);\n          }\n        }\n      }\n\n      document.addEventListener(\"keydown\", handleKeyDown);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n      };\n    }, [isFocusedWithin]);\n\n    useLayoutEffect(() => {\n      let previousViewportWidth: EmojiPickerStore[\"viewportWidth\"] = null;\n      let previousViewportHeight: EmojiPickerStore[\"viewportHeight\"] = null;\n      let previousRowHeight: EmojiPickerStore[\"rowHeight\"] = null;\n      let previousCategoryHeaderHeight: EmojiPickerStore[\"categoryHeaderHeight\"] =\n        null;\n\n      const unsubscribe = store.subscribe((state) => {\n        /* v8 ignore next 3 */\n        if (!ref.current) {\n          return;\n        }\n\n        if (previousViewportWidth !== state.viewportWidth) {\n          previousViewportWidth = state.viewportWidth;\n\n          ref.current.style.setProperty(\n            \"--frimousse-viewport-width\",\n            `${state.viewportWidth}px`,\n          );\n        }\n\n        if (previousViewportHeight !== state.viewportHeight) {\n          previousViewportHeight = state.viewportHeight;\n\n          ref.current.style.setProperty(\n            \"--frimousse-viewport-height\",\n            `${state.viewportHeight}px`,\n          );\n        }\n\n        if (previousRowHeight !== state.rowHeight) {\n          previousRowHeight = state.rowHeight;\n\n          ref.current.style.setProperty(\n            \"--frimousse-row-height\",\n            `${state.rowHeight}px`,\n          );\n        }\n\n        if (previousCategoryHeaderHeight !== state.categoryHeaderHeight) {\n          previousCategoryHeaderHeight = state.categoryHeaderHeight;\n\n          ref.current.style.setProperty(\n            \"--frimousse-category-header-height\",\n            `${state.categoryHeaderHeight}px`,\n          );\n        }\n      });\n\n      const { viewportWidth, viewportHeight, rowHeight, categoryHeaderHeight } =\n        store.get();\n\n      if (viewportWidth) {\n        ref.current.style.setProperty(\n          \"--frimousse-viewport-width\",\n          `${viewportWidth}px`,\n        );\n      }\n\n      if (viewportHeight) {\n        ref.current.style.setProperty(\n          \"--frimousse-viewport-height\",\n          `${viewportHeight}px`,\n        );\n      }\n\n      if (rowHeight) {\n        ref.current.style.setProperty(\n          \"--frimousse-row-height\",\n          `${rowHeight}px`,\n        );\n      }\n\n      if (categoryHeaderHeight) {\n        ref.current.style.setProperty(\n          \"--frimousse-category-header-height\",\n          `${categoryHeaderHeight}px`,\n        );\n      }\n\n      return unsubscribe;\n    }, []);\n\n    return (\n      <div\n        data-focused={isFocusedWithin ? \"\" : undefined}\n        frimousse-root=\"\"\n        onBlurCapture={handleBlurCapture}\n        onFocusCapture={handleFocusCapture}\n        {...props}\n        ref={callbackRef}\n        style={\n          {\n            \"--frimousse-emoji-font\": EMOJI_FONT_FAMILY,\n            ...style,\n          } as CSSProperties\n        }\n      >\n        <EmojiPickerStoreProvider store={store}>\n          <EmojiPickerDataHandler\n            emojibaseUrl={emojibaseUrl}\n            emojiVersion={emojiVersion}\n          />\n          {children}\n        </EmojiPickerStoreProvider>\n      </div>\n    );\n  },\n);\n\n/**\n * A search input to filter the list of emojis.\n *\n * @example\n * ```tsx\n * <EmojiPicker.Root>\n *   <EmojiPicker.Search />\n *   <EmojiPicker.Viewport>\n *     <EmojiPicker.List />\n *   </EmojiPicker.Viewport>\n * </EmojiPicker.Root>\n * ```\n *\n * It can be controlled or uncontrolled.\n *\n * @example\n * ```tsx\n * const [search, setSearch] = useState(\"\");\n *\n * return (\n *   <EmojiPicker.Root>\n *     <EmojiPicker.Search\n *       value={search}\n *       onChange={(event) => setSearch(event.target.value)}\n *     />\n *     {\\/* ... *\\/}\n *   </EmojiPicker.Root>\n * );\n * ```\n */\nconst EmojiPickerSearch = forwardRef<HTMLInputElement, EmojiPickerSearchProps>(\n  ({ value, defaultValue, onChange, ...props }, forwardedRef) => {\n    const store = useEmojiPickerStore();\n    const ref = useRef<HTMLInputElement>(null!);\n    const callbackRef = useCallback((element: HTMLInputElement | null) => {\n      if (element) {\n        ref.current = element;\n        store.set({ searchRef: ref });\n      }\n    }, []);\n    const isControlled = typeof value === \"string\";\n    const wasControlled = useRef(isControlled);\n\n    useEffect(() => {\n      if (\n        process.env.NODE_ENV !== \"production\" &&\n        wasControlled.current !== isControlled\n      ) {\n        console.warn(\n          `EmojiPicker.Search is changing from ${\n            wasControlled ? \"controlled\" : \"uncontrolled\"\n          } to ${isControlled ? \"controlled\" : \"uncontrolled\"}.`,\n        );\n      }\n\n      wasControlled.current = isControlled;\n    }, [isControlled]);\n\n    // Initialize search with a controlled or uncontrolled value\n    useLayoutEffect(() => {\n      store.set({\n        search:\n          typeof value === \"string\"\n            ? value\n            : typeof defaultValue === \"string\"\n              ? defaultValue\n              : \"\",\n      });\n    }, []);\n\n    // Handle controlled value changes\n    useLayoutEffect(() => {\n      if (typeof value === \"string\") {\n        store.get().onSearchChange(value);\n      }\n    }, [value]);\n\n    const handleChange = useCallback(\n      (event: ReactChangeEvent<HTMLInputElement>) => {\n        onChange?.(event);\n\n        if (!event.isDefaultPrevented()) {\n          store.get().onSearchChange(event.target.value);\n        }\n      },\n      [onChange],\n    );\n\n    useImperativeHandle(forwardedRef, () => ref.current);\n\n    return (\n      <input\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        enterKeyHint=\"done\"\n        frimousse-search=\"\"\n        placeholder=\"Search…\"\n        spellCheck={false}\n        type=\"search\"\n        {...props}\n        defaultValue={defaultValue}\n        onChange={handleChange}\n        ref={callbackRef}\n        value={value}\n      />\n    );\n  },\n);\n\nconst ActiveEmojiAnnouncer = memo(() => {\n  const activeEmoji = useActiveEmoji();\n\n  if (!activeEmoji) {\n    return null;\n  }\n\n  return (\n    <div\n      aria-live=\"polite\"\n      style={{\n        border: 0,\n        clip: \"rect(0, 0, 0, 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        whiteSpace: \"nowrap\",\n        width: 1,\n        wordWrap: \"normal\",\n      }}\n    >\n      {activeEmoji.label}\n    </div>\n  );\n});\n\n/**\n * The scrolling container of the emoji picker.\n *\n * @example\n * ```tsx\n * <EmojiPicker.Root>\n *   <EmojiPicker.Search />\n *   <EmojiPicker.Viewport>\n *     <EmojiPicker.Loading>Loading…</EmojiPicker.Loading>\n *     <EmojiPicker.Empty>No emoji found.</EmojiPicker.Empty>\n *     <EmojiPicker.List />\n *   </EmojiPicker.Viewport>\n * </EmojiPicker.Root>\n * ```\n */\nconst EmojiPickerViewport = forwardRef<\n  HTMLDivElement,\n  EmojiPickerViewportProps\n>(({ children, onScroll, onKeyDown, style, ...props }, forwardedRef) => {\n  const store = useEmojiPickerStore();\n  const ref = useRef<HTMLDivElement>(null!);\n  const callbackRef = useCallback((element: HTMLDivElement | null) => {\n    if (element) {\n      ref.current = element;\n      store.set({ viewportRef: ref });\n    }\n  }, []);\n  const rowsCount = useSelector(store, $rowsCount);\n  const categoriesCount = useSelector(store, $categoriesCount);\n\n  const handleScroll = useCallback(\n    (event: ReactUIEvent<HTMLDivElement>) => {\n      onScroll?.(event);\n\n      store.get().onViewportScroll(event.currentTarget.scrollTop);\n    },\n    [onScroll],\n  );\n\n  useLayoutEffect(() => {\n    /* v8 ignore next 3 */\n    if (!ref.current) {\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver(([entry]) => {\n      const width = entry?.borderBoxSize[0]?.inlineSize ?? 0;\n      const height = entry?.borderBoxSize[0]?.blockSize ?? 0;\n\n      const { onViewportSizeChange, viewportHeight, viewportWidth } =\n        store.get();\n\n      if (viewportHeight !== height || viewportWidth !== width) {\n        onViewportSizeChange(width, height);\n      }\n    });\n\n    resizeObserver.observe(ref.current);\n\n    store\n      .get()\n      .onViewportSizeChange(ref.current.offsetWidth, ref.current.clientHeight);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  useImperativeHandle(forwardedRef, () => ref.current);\n\n  return (\n    <div\n      frimousse-viewport=\"\"\n      {...props}\n      onScroll={handleScroll}\n      ref={callbackRef}\n      style={{\n        position: \"relative\",\n        boxSizing: \"border-box\",\n        contain: \"layout paint\",\n        containIntrinsicSize:\n          typeof rowsCount === \"number\" && typeof categoriesCount === \"number\"\n            ? `var(--frimousse-viewport-width, auto) calc(${rowsCount} * var(--frimousse-row-height) + ${categoriesCount} * var(--frimousse-category-header-height))`\n            : undefined,\n        overflowY: \"auto\",\n        overscrollBehavior: \"contain\",\n        scrollbarGutter: \"stable\",\n        willChange: \"scroll-position\",\n        ...style,\n      }}\n    >\n      <ActiveEmojiAnnouncer />\n      {children}\n    </div>\n  );\n});\n\nfunction listEmojiProps(\n  emoji: EmojiPickerEmoji,\n  columnIndex: number,\n  isActive: boolean,\n): WithAttributes<EmojiPickerListEmojiProps> {\n  return {\n    emoji: { ...emoji, isActive },\n    role: \"gridcell\",\n    \"aria-colindex\": columnIndex,\n    \"aria-selected\": isActive || undefined,\n    \"aria-label\": emoji.label,\n    \"data-active\": isActive ? \"\" : undefined,\n    \"frimousse-emoji\": \"\",\n    style: {\n      fontFamily: \"var(--frimousse-emoji-font)\",\n    },\n    tabIndex: -1,\n  };\n}\n\nfunction listRowProps(\n  rowIndex: number,\n  sizer = false,\n): WithAttributes<EmojiPickerListRowProps> {\n  return {\n    role: !sizer ? \"row\" : undefined,\n    \"aria-rowindex\": !sizer ? rowIndex : undefined,\n    \"frimousse-row\": \"\",\n    style: {\n      contain: !sizer ? \"content\" : undefined,\n      height: !sizer ? \"var(--frimousse-row-height)\" : undefined,\n      display: \"flex\",\n    },\n  };\n}\n\nfunction listCategoryProps(\n  categoryIndex: number,\n  category?: EmojiPickerDataCategory,\n): WithAttributes<ComponentProps<\"div\">> {\n  return {\n    \"frimousse-category\": \"\",\n    style: {\n      contain: \"content\",\n      top: category\n        ? `calc(${categoryIndex} * var(--frimousse-category-header-height) + ${category.startRowIndex} * var(--frimousse-row-height))`\n        : undefined,\n      height: category\n        ? `calc(var(--frimousse-category-header-height) + ${category.rowsCount} * var(--frimousse-row-height))`\n        : undefined,\n      width: \"100%\",\n      pointerEvents: \"none\",\n      position: \"absolute\",\n    },\n  };\n}\n\nfunction listCategoryHeaderProps(\n  category: EmojiPickerCategory,\n  sizer = false,\n  sticky = true,\n): WithAttributes<EmojiPickerListCategoryHeaderProps> {\n  return {\n    category,\n    \"frimousse-category-header\": \"\",\n    style: {\n      contain: !sizer ? \"layout paint\" : undefined,\n      height: !sizer ? \"var(--frimousse-category-header-height)\" : undefined,\n      pointerEvents: \"auto\",\n      position: sticky ? \"sticky\" : undefined,\n      top: 0,\n    },\n  };\n}\n\nfunction listSizerProps(\n  rowsCount: number,\n  categoriesCount: number,\n  viewportStartRowIndex: number,\n  previousHeadersCount: number,\n): WithAttributes<ComponentProps<\"div\">> {\n  return {\n    \"frimousse-list-sizer\": \"\",\n    style: {\n      position: \"relative\",\n      boxSizing: \"border-box\",\n      height: `calc(${rowsCount} * var(--frimousse-row-height) + ${categoriesCount} * var(--frimousse-category-header-height))`,\n      paddingTop: `calc(${viewportStartRowIndex} * var(--frimousse-row-height) + ${previousHeadersCount} * var(--frimousse-category-header-height))`,\n    },\n  };\n}\n\nfunction listProps(\n  columns: number,\n  rowsCount: number,\n  style: CSSProperties | undefined,\n): WithAttributes<EmojiPickerListProps> {\n  return {\n    \"aria-colcount\": columns,\n    \"aria-rowcount\": rowsCount,\n    \"frimousse-list\": \"\",\n    style: {\n      \"--frimousse-list-columns\": columns,\n      ...style,\n    } as CSSProperties,\n    role: \"grid\",\n  };\n}\n\nfunction preventDefault(event: ReactSyntheticEvent) {\n  event.preventDefault();\n}\n\nconst EmojiPickerListEmoji = memo(\n  ({\n    Emoji,\n    emoji,\n    columnIndex,\n    rowIndex,\n  }: {\n    emoji: EmojiPickerEmoji;\n    columnIndex: number;\n    rowIndex: number;\n  } & Pick<EmojiPickerListComponents, \"Emoji\">) => {\n    const store = useEmojiPickerStore();\n    const isActive = useSelector(\n      store,\n      (state) => $activeEmoji(state)?.emoji === emoji.emoji,\n    );\n\n    const handleSelect = useCallback(() => {\n      store.get().onEmojiSelect(emoji);\n    }, [emoji]);\n\n    const handlePointerEnter = useCallback(() => {\n      store.get().onActiveEmojiChange(\"pointer\", columnIndex, rowIndex);\n    }, [columnIndex, rowIndex]);\n\n    const handlePointerLeave = useCallback(() => {\n      store.get().onActiveEmojiReset();\n    }, []);\n\n    return (\n      <Emoji\n        {...listEmojiProps(emoji, columnIndex, isActive)}\n        onClick={handleSelect}\n        onPointerDown={preventDefault}\n        onPointerEnter={handlePointerEnter}\n        onPointerLeave={handlePointerLeave}\n      />\n    );\n  },\n);\n\nconst EmojiPickerListRow = memo(\n  ({\n    Row,\n    Emoji,\n    rowIndex,\n  }: { rowIndex: number } & Pick<\n    EmojiPickerListComponents,\n    \"Emoji\" | \"Row\"\n  >) => {\n    const store = useEmojiPickerStore();\n    const row = useSelector(\n      store,\n      (state) => state.data?.rows[rowIndex],\n      sameEmojiPickerRow,\n    );\n\n    /* v8 ignore next 3 */\n    if (!row) {\n      return null;\n    }\n\n    return (\n      <Row {...listRowProps(rowIndex)}>\n        {row.emojis.map((emoji, columnIndex) => (\n          <EmojiPickerListEmoji\n            columnIndex={columnIndex}\n            Emoji={Emoji}\n            emoji={emoji}\n            key={emoji.label}\n            rowIndex={rowIndex}\n          />\n        ))}\n      </Row>\n    );\n  },\n);\n\nconst EmojiPickerListCategory = memo(\n  ({\n    CategoryHeader,\n    categoryIndex,\n  }: { categoryIndex: number } & Pick<\n    EmojiPickerListComponents,\n    \"CategoryHeader\"\n  >) => {\n    const store = useEmojiPickerStore();\n    const category = useSelector(\n      store,\n      (state) => state.data?.categories[categoryIndex],\n      shallow,\n    );\n    const sticky = useSelectorKey(store, \"sticky\");\n\n    /* v8 ignore next 3 */\n    if (!category) {\n      return null;\n    }\n\n    return (\n      <div {...listCategoryProps(categoryIndex, category)}>\n        <CategoryHeader\n          {...listCategoryHeaderProps(\n            { label: category.label, isCustom: category.isCustom },\n            false,\n            sticky,\n          )}\n        />\n      </div>\n    );\n  },\n);\n\nconst EmojiPickerListSizers = memo(\n  ({\n    CategoryHeader,\n    Row,\n    Emoji,\n  }: Pick<EmojiPickerListComponents, \"CategoryHeader\" | \"Row\" | \"Emoji\">) => {\n    const ref = useRef<HTMLDivElement>(null!);\n    const store = useEmojiPickerStore();\n    const columns = useSelectorKey(store, \"columns\");\n    const emojis = useMemo(\n      () =>\n        Array<EmojiPickerEmoji>(columns).fill({\n          emoji: \"🙂\",\n          label: \"\",\n        }),\n      [columns],\n    );\n    const category: EmojiPickerCategory = useMemo(\n      () => ({\n        label: \"Category\",\n      }),\n      [],\n    );\n    const rowRef = useRef<HTMLDivElement>(null!);\n    const categoryHeaderRef = useRef<HTMLDivElement>(null!);\n\n    useLayoutEffect(() => {\n      const list = ref.current?.parentElement?.parentElement;\n\n      /* v8 ignore next 3 */\n      if (!list || !rowRef.current || !categoryHeaderRef.current) {\n        return;\n      }\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const height = entry.contentRect.height;\n\n          const {\n            onRowHeightChange,\n            onCategoryHeaderHeightChange,\n            rowHeight,\n            categoryHeaderHeight,\n          } = store.get();\n\n          if (entry.target === rowRef.current && rowHeight !== height) {\n            onRowHeightChange(height);\n          }\n\n          if (\n            entry.target === categoryHeaderRef.current &&\n            categoryHeaderHeight !== height\n          ) {\n            onCategoryHeaderHeightChange(height);\n          }\n        }\n      });\n\n      resizeObserver.observe(list);\n      resizeObserver.observe(rowRef.current);\n      resizeObserver.observe(categoryHeaderRef.current);\n\n      const { onRowHeightChange, onCategoryHeaderHeightChange } = store.get();\n\n      onRowHeightChange(rowRef.current.clientHeight);\n      onCategoryHeaderHeightChange(categoryHeaderRef.current.clientHeight);\n\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }, []);\n\n    return (\n      <div\n        aria-hidden\n        ref={ref}\n        style={{\n          height: 0,\n          visibility: \"hidden\",\n        }}\n      >\n        <div frimousse-row-sizer=\"\" ref={rowRef}>\n          <Row {...listRowProps(-1, true)}>\n            {emojis.map((emoji, index) => (\n              <Emoji key={index} {...listEmojiProps(emoji, index, false)} />\n            ))}\n          </Row>\n        </div>\n        <div {...listCategoryProps(-1)}>\n          <div frimousse-category-header-sizer=\"\" ref={categoryHeaderRef}>\n            <CategoryHeader {...listCategoryHeaderProps(category, true)} />\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n\nfunction DefaultEmojiPickerListCategoryHeader({\n  category,\n  ...props\n}: EmojiPickerListCategoryHeaderProps) {\n  return <div {...props}>{category.label}</div>;\n}\n\nfunction DefaultEmojiPickerListEmoji({\n  emoji,\n  ...props\n}: EmojiPickerListEmojiProps) {\n  return (\n    <button type=\"button\" {...props}>\n      {emoji.isCustom === true ? (\n        <img alt={emoji.label} src={emoji.emoji} />\n      ) : (\n        emoji.emoji\n      )}\n    </button>\n  );\n}\n\nfunction DefaultEmojiPickerListRow({ ...props }: EmojiPickerListRowProps) {\n  return <div {...props} />;\n}\n\n/**\n * The list of emojis.\n *\n * @example\n * ```tsx\n * <EmojiPicker.Root>\n *   <EmojiPicker.Search />\n *   <EmojiPicker.Viewport>\n *     <EmojiPicker.List />\n *   </EmojiPicker.Viewport>\n * </EmojiPicker.Root>\n * ```\n *\n * Inner components within the list can be customized via the `components` prop.\n *\n * @example\n * ```tsx\n * <EmojiPicker.List\n *   components={{\n *     CategoryHeader: ({ category, ...props }) => (\n *       <div {...props}>{category.label}</div>\n *     ),\n *     Emoji: ({ emoji, ...props }) => (\n *       <button {...props}>\n *         {emoji.emoji}\n *       </button>\n *     ),\n *     Row: ({ children, ...props }) => <div {...props}>{children}</div>,\n *   }}\n * />\n * ```\n */\nconst EmojiPickerList = forwardRef<HTMLDivElement, EmojiPickerListProps>(\n  ({ style, components, ...props }, forwardedRef) => {\n    const store = useEmojiPickerStore();\n    const ref = useRef<HTMLDivElement>(null!);\n    const callbackRef = useCallback((element: HTMLDivElement | null) => {\n      if (element) {\n        ref.current = element;\n        store.set({ listRef: ref });\n      }\n    }, []);\n    const CategoryHeader =\n      components?.CategoryHeader ?? DefaultEmojiPickerListCategoryHeader;\n    const Emoji = components?.Emoji ?? DefaultEmojiPickerListEmoji;\n    const Row = components?.Row ?? DefaultEmojiPickerListRow;\n    const columns = useSelectorKey(store, \"columns\");\n    const viewportStartRowIndex = useSelectorKey(\n      store,\n      \"viewportStartRowIndex\",\n    );\n    const viewportEndRowIndex = useSelectorKey(store, \"viewportEndRowIndex\");\n    const rowsCount = useSelector(store, $rowsCount);\n    const categoriesRowsStartIndices = useSelector(\n      store,\n      $categoriesRowsStartIndices,\n      shallow,\n    );\n    const previousHeadersCount = useMemo(() => {\n      return (\n        categoriesRowsStartIndices?.filter(\n          (index) => index < viewportStartRowIndex,\n        ).length ?? 0\n      );\n    }, [categoriesRowsStartIndices, viewportStartRowIndex]);\n    const categoriesCount = categoriesRowsStartIndices?.length ?? 0;\n\n    useImperativeHandle(forwardedRef, () => ref.current);\n\n    if (!rowsCount || !categoriesRowsStartIndices || categoriesCount === 0) {\n      return (\n        <div {...listProps(columns, 0, style)} {...props}>\n          <div {...listSizerProps(0, 0, 0, 0)}>\n            <EmojiPickerListSizers\n              CategoryHeader={CategoryHeader}\n              Emoji={Emoji}\n              Row={Row}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        {...listProps(columns, rowsCount, style)}\n        {...props}\n        ref={callbackRef}\n      >\n        <div\n          {...listSizerProps(\n            rowsCount,\n            categoriesCount,\n            viewportStartRowIndex,\n            previousHeadersCount,\n          )}\n        >\n          <EmojiPickerListSizers\n            CategoryHeader={CategoryHeader}\n            Emoji={Emoji}\n            Row={Row}\n          />\n          {Array.from(\n            { length: viewportEndRowIndex - viewportStartRowIndex + 1 },\n            (_, index) => {\n              const rowIndex = viewportStartRowIndex + index;\n              const categoryIndex =\n                categoriesRowsStartIndices.indexOf(rowIndex);\n\n              return (\n                <Fragment key={rowIndex}>\n                  {categoryIndex >= 0 && (\n                    <div\n                      style={{\n                        height: \"var(--frimousse-category-header-height)\",\n                      }}\n                    />\n                  )}\n                  <EmojiPickerListRow\n                    Emoji={Emoji}\n                    Row={Row}\n                    rowIndex={rowIndex}\n                  />\n                </Fragment>\n              );\n            },\n          )}\n          {Array.from({ length: categoriesCount }, (_, index) => (\n            <EmojiPickerListCategory\n              CategoryHeader={CategoryHeader}\n              categoryIndex={index}\n              key={index}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  },\n);\n\n/**\n * A button to change the current skin tone by cycling through the\n * available skin tones.\n *\n * @example\n * ```tsx\n * <EmojiPicker.SkinToneSelector />\n * ```\n *\n * The emoji used as visual can be customized (by default, ✋).\n *\n * @example\n * ```tsx\n * <EmojiPicker.SkinToneSelector emoji=\"👋\" />\n * ```\n *\n * @see\n * If you want to build a custom skin tone selector, you can use the\n * {@link EmojiPickerSkinTone|`<EmojiPicker.SkinTone />`} component or\n * {@link useSkinTone|`useSkinTone`} hook.\n */\nconst EmojiPickerSkinToneSelector = forwardRef<\n  HTMLButtonElement,\n  EmojiPickerSkinToneSelectorProps\n>(\n  (\n    { emoji, onClick, \"aria-label\": ariaLabel = \"Change skin tone\", ...props },\n    forwardedRef,\n  ) => {\n    const store = useEmojiPickerStore();\n    const skinTones = useSelector(store, $skinTones, shallow);\n    const [skinTone, setSkinTone, skinToneVariations] = useSkinTone(emoji);\n\n    const skinToneVariationIndex = useMemo(\n      () =>\n        Math.max(\n          0,\n          skinToneVariations.findIndex(\n            (variation) => variation.skinTone === skinTone,\n          ),\n        ),\n      [skinTone, skinToneVariations],\n    );\n\n    const skinToneVariation = skinToneVariations[skinToneVariationIndex]!;\n    const nextSkinToneVariation =\n      skinToneVariations[\n        (skinToneVariationIndex + 1) % skinToneVariations.length\n      ]!;\n    const nextSkinTone = nextSkinToneVariation.skinTone;\n\n    const nextSkinToneLabel =\n      nextSkinTone === \"none\" ? undefined : skinTones?.[nextSkinTone];\n\n    const handleClick = useCallback(\n      (event: ReactMouseEvent<HTMLButtonElement>) => {\n        onClick?.(event);\n\n        if (!event.isDefaultPrevented()) {\n          setSkinTone(nextSkinTone);\n        }\n      },\n      [onClick, setSkinTone, nextSkinTone],\n    );\n\n    return (\n      <button\n        type=\"button\"\n        {...props}\n        aria-label={\n          ariaLabel + (nextSkinToneLabel ? ` (${nextSkinToneLabel})` : \"\")\n        }\n        aria-live=\"polite\"\n        frimousse-skin-tone-selector=\"\"\n        onClick={handleClick}\n        ref={forwardedRef}\n      >\n        {skinToneVariation.emoji}\n      </button>\n    );\n  },\n);\n\n/**\n * Only renders when the emoji data is loading.\n *\n * @example\n * ```tsx\n * <EmojiPicker.Root>\n *   <EmojiPicker.Search />\n *   <EmojiPicker.Viewport>\n *     <EmojiPicker.Loading>Loading…</EmojiPicker.Loading>\n *     <EmojiPicker.List />\n *   </EmojiPicker.Viewport>\n * </EmojiPicker.Root>\n * ```\n */\nfunction EmojiPickerLoading({ children, ...props }: EmojiPickerLoadingProps) {\n  const store = useEmojiPickerStore();\n  const isLoading = useSelector(store, $isLoading);\n\n  if (!isLoading) {\n    return null;\n  }\n\n  return (\n    <span frimousse-loading=\"\" {...props}>\n      {children}\n    </span>\n  );\n}\n\nfunction EmojiPickerEmptyWithSearch({\n  children,\n}: {\n  children: (props: { search: string }) => ReactNode;\n}) {\n  const store = useEmojiPickerStore();\n  const search = useSelector(store, $search);\n\n  return children({ search });\n}\n\n/**\n * Only renders when no emoji is found for the current search. The content is\n * rendered without any surrounding DOM element.\n *\n * @example\n * ```tsx\n * <EmojiPicker.Root>\n *   <EmojiPicker.Search />\n *   <EmojiPicker.Viewport>\n *     <EmojiPicker.Empty>No emoji found.</EmojiPicker.Empty>\n *     <EmojiPicker.List />\n *   </EmojiPicker.Viewport>\n * </EmojiPicker.Root>\n * ```\n *\n * It can also expose the current search via a render callback to build\n * a more detailed empty state.\n *\n *  @example\n * ```tsx\n * <EmojiPicker.Empty>\n *   {({ search }) => <>No emoji found for \"{search}\"</>}\n * </EmojiPicker.Empty>\n * ```\n */\nfunction EmojiPickerEmpty({ children, ...props }: EmojiPickerEmptyProps) {\n  const store = useEmojiPickerStore();\n  const isEmpty = useSelector(store, $isEmpty);\n\n  if (!isEmpty) {\n    return null;\n  }\n\n  return (\n    <span frimousse-empty=\"\" {...props}>\n      {typeof children === \"function\" ? (\n        <EmojiPickerEmptyWithSearch>{children}</EmojiPickerEmptyWithSearch>\n      ) : (\n        children\n      )}\n    </span>\n  );\n}\n\n/**\n * Exposes the currently active emoji (either hovered or selected\n * via keyboard navigation) via a render callback.\n *\n * @example\n * ```tsx\n * <EmojiPicker.ActiveEmoji>\n *   {({ emoji }) => <span>{emoji}</span>}\n * </EmojiPicker.ActiveEmoji>\n * ```\n *\n * It can be used to build a preview area next to the list.\n *\n * @example\n * ```tsx\n * <EmojiPicker.ActiveEmoji>\n *   {({ emoji }) => (\n *     <div>\n *       {emoji ? (\n *         <span>{emoji.emoji} {emoji.label}</span>\n *       ) : (\n *         <span>Select an emoji…</span>\n *       )}\n *     </div>\n *   )}\n * </EmojiPicker.ActiveEmoji>\n * ```\n *\n * @see\n * If you prefer to use a hook rather than a component,\n * {@link useActiveEmoji} is also available.\n */\nfunction EmojiPickerActiveEmoji({ children }: EmojiPickerActiveEmojiProps) {\n  const activeEmoji = useActiveEmoji();\n\n  return children({ emoji: activeEmoji });\n}\n\n/**\n * Exposes the current skin tone and a function to change it via a render\n * callback.\n *\n * @example\n * ```tsx\n * <EmojiPicker.SkinTone>\n *   {({ skinTone, setSkinTone }) => (\n *     <div>\n *       <span>{skinTone}</span>\n *       <button onClick={() => setSkinTone(\"none\")}>Reset skin tone</button>\n *     </div>\n *   )}\n * </EmojiPicker.SkinTone>\n * ```\n *\n * It can be used to build a custom skin tone selector: pass an emoji\n * you want to use as visual (by default, ✋) and it will return its skin tone\n * variations.\n *\n * @example\n * ```tsx\n * const [skinTone, setSkinTone, skinToneVariations] = useSkinTone(\"👋\");\n *\n * // (👋) (👋🏻) (👋🏼) (👋🏽) (👋🏾) (👋🏿)\n * <EmojiPicker.SkinTone emoji=\"👋\">\n *   {({ skinTone, setSkinTone, skinToneVariations }) => (\n *     skinToneVariations.map(({ skinTone, emoji }) => (\n *       <button key={skinTone} onClick={() => setSkinTone(skinTone)}>\n *         {emoji}\n *       </button>\n *     ))\n *   )}\n * </EmojiPicker.SkinTone>\n * ```\n *\n * @see\n * If you prefer to use a hook rather than a component,\n * {@link useSkinTone} is also available.\n *\n * @see\n * An already-built skin tone selector is also available,\n * {@link EmojiPicker.SkinToneSelector|`<EmojiPicker.SkinToneSelector />`}.\n */\nfunction EmojiPickerSkinTone({ children, emoji }: EmojiPickerSkinToneProps) {\n  const [skinTone, setSkinTone, skinToneVariations] = useSkinTone(emoji);\n\n  return children({ skinTone, setSkinTone, skinToneVariations });\n}\n\nEmojiPickerRoot.displayName = \"EmojiPicker.Root\";\nEmojiPickerSearch.displayName = \"EmojiPicker.Search\";\nEmojiPickerViewport.displayName = \"EmojiPicker.Viewport\";\nEmojiPickerList.displayName = \"EmojiPicker.List\";\nEmojiPickerLoading.displayName = \"EmojiPicker.Loading\";\nEmojiPickerEmpty.displayName = \"EmojiPicker.Empty\";\nEmojiPickerSkinToneSelector.displayName = \"EmojiPicker.SkinToneSelector\";\nEmojiPickerActiveEmoji.displayName = \"EmojiPicker.ActiveEmoji\";\nEmojiPickerSkinTone.displayName = \"EmojiPicker.SkinTone\";\n\nexport {\n  EmojiPickerRoot as Root, //                         <EmojiPicker.Root />\n  EmojiPickerSearch as Search, //                     <EmojiPicker.Search />\n  EmojiPickerViewport as Viewport, //                 <EmojiPicker.Viewport />\n  EmojiPickerList as List, //                         <EmojiPicker.List />\n  EmojiPickerLoading as Loading, //                   <EmojiPicker.Loading />\n  EmojiPickerEmpty as Empty, //                       <EmojiPicker.Empty />\n  EmojiPickerSkinToneSelector as SkinToneSelector, // <EmojiPicker.SkinToneSelector />\n  EmojiPickerActiveEmoji as ActiveEmoji, //           <EmojiPicker.ActiveEmoji />\n  EmojiPickerSkinTone as SkinTone, //                 <EmojiPicker.SkinTone />\n};\n","import type { SkinTone } from \"./types\";\n\nexport const EMOJI_FONT_FAMILY =\n  \"'Apple Color Emoji', 'Noto Color Emoji', 'Twemoji Mozilla', 'Android Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', EmojiSymbols, sans-serif\";\n\nexport const SKIN_TONES: SkinTone[] = [\n  \"none\",\n  \"light\",\n  \"medium-light\",\n  \"medium\",\n  \"medium-dark\",\n  \"dark\",\n];\n","export function capitalize(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import { EMOJI_FONT_FAMILY } from \"../constants\";\n\nconst CANVAS_SIZE = 2;\n\nlet context: CanvasRenderingContext2D | null = null;\n\nexport function isEmojiSupported(emoji: string): boolean {\n  try {\n    context ??= document\n      .createElement(\"canvas\")\n      .getContext(\"2d\", { willReadFrequently: true });\n    /* v8 ignore next */\n  } catch {}\n\n  // Non-browser environments are not supported\n  if (!context) {\n    return false;\n  }\n\n  // Schedule to dispose of the context\n  queueMicrotask(() => {\n    if (context) {\n      context = null;\n    }\n  });\n\n  context.canvas.width = CANVAS_SIZE;\n  context.canvas.height = CANVAS_SIZE;\n  context.font = `2px ${EMOJI_FONT_FAMILY}`;\n  context.textBaseline = \"middle\";\n\n  // Unsupported ZWJ sequence emojis show up as separate emojis\n  if (context.measureText(emoji).width >= CANVAS_SIZE * 2) {\n    return false;\n  }\n\n  context.fillStyle = \"#00f\";\n  context.fillText(emoji, 0, 0);\n\n  const blue = context.getImageData(0, 0, CANVAS_SIZE, CANVAS_SIZE).data;\n\n  context.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n\n  context.fillStyle = \"#f00\";\n  context.fillText(emoji, 0, 0);\n\n  const red = context.getImageData(0, 0, CANVAS_SIZE, CANVAS_SIZE).data;\n\n  // Emojis have an immutable color so they should look the same regardless of the text color\n  for (let i = 0; i < CANVAS_SIZE * CANVAS_SIZE * 4; i += 4) {\n    if (\n      blue[i] !== red[i] || //         R\n      blue[i + 1] !== red[i + 1] || // G\n      blue[i + 2] !== red[i + 2] //    B\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export function getStorage<T>(\n  storage: Storage,\n  key: string,\n  validate: (value: unknown) => T,\n) {\n  try {\n    const item = storage.getItem(key);\n\n    if (!item) {\n      throw new Error(`No value found for \"${key}\".`);\n    }\n\n    const value = JSON.parse(item) as T;\n\n    return validate(value);\n  } catch {\n    return null;\n  }\n}\n\nexport function setStorage<T>(storage: Storage, key: string, value: T) {\n  storage.setItem(key, JSON.stringify(value));\n}\n","// A suite of tiny validators.\n// They are only meant to be used internally, so they don't throw human-friendly errors.\n\nexport type Validator<T> = (data: unknown) => T;\n\nexport function optional<T>(\n  validate: Validator<T>,\n): (data: unknown) => T | undefined {\n  return (data: unknown): T | undefined =>\n    data === undefined ? undefined : validate(data);\n}\n\nexport function nullable<T>(validate: Validator<T>): Validator<T | null> {\n  return (data: unknown): T | null => (data === null ? null : validate(data));\n}\n\nexport function string(data: unknown): string {\n  if (typeof data !== \"string\") {\n    throw new Error();\n  }\n\n  return data;\n}\n\nexport function number(data: unknown): number {\n  if (typeof data !== \"number\") {\n    throw new Error();\n  }\n\n  return data;\n}\n\nexport function boolean(data: unknown): boolean {\n  if (typeof data !== \"boolean\") {\n    throw new Error();\n  }\n\n  return data;\n}\n\nexport function object<T>(\n  keys: {\n    [K in keyof T]: Validator<T[K]>;\n  },\n): (data: unknown) => T {\n  return (data: unknown): T => {\n    if (typeof data !== \"object\" || data === null) {\n      throw new Error();\n    }\n\n    const result = {} as T;\n\n    for (const key in keys) {\n      const value = (data as Record<keyof T, unknown>)[key];\n\n      if (value === undefined) {\n        // If the value is undefined, verify whether the validator allows it\n        keys[key](undefined);\n      }\n\n      result[key as keyof T] = keys[key](value);\n    }\n\n    return result;\n  };\n}\n\nexport function naiveArray<T>(validate: Validator<T>): Validator<T[]> {\n  return (data: unknown): T[] => {\n    if (!Array.isArray(data)) {\n      throw new Error();\n    }\n\n    // Naively only validate the first item\n    if (data.length > 0) {\n      validate(data[0]);\n    }\n\n    return data;\n  };\n}\n","import { SKIN_TONES } from \"../constants\";\nimport type {\n  EmojibaseEmoji,\n  EmojibaseEmojiWithGroup,\n  EmojibaseMessagesDataset,\n  EmojiData,\n  EmojiDataEmoji,\n  Locale,\n  SkinTone,\n} from \"../types\";\nimport { capitalize } from \"../utils/capitalize\";\nimport { isEmojiSupported } from \"../utils/is-emoji-supported\";\nimport { getStorage, setStorage } from \"../utils/storage\";\nimport * as $ from \"../utils/validate\";\n\nconst EMOJIBASE_EMOJIS_URL = (baseUrl: string, locale: Locale) =>\n  `${baseUrl}/${locale}/data.json`;\nconst EMOJIBASE_MESSAGES_URL = (baseUrl: string, locale: Locale) =>\n  `${baseUrl}/${locale}/messages.json`;\n\nconst EMOJIBASE_LOCALES = [\n  \"bn\",\n  \"da\",\n  \"de\",\n  \"en-gb\",\n  \"en\",\n  \"es-mx\",\n  \"es\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"hi\",\n  \"hu\",\n  \"it\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"ms\",\n  \"nb\",\n  \"nl\",\n  \"pl\",\n  \"pt\",\n  \"ru\",\n  \"sv\",\n  \"th\",\n  \"uk\",\n  \"vi\",\n  \"zh-hant\",\n  \"zh\",\n] satisfies Locale[];\nconst EMOJIBASE_DEFAULT_LOCALE: Locale = \"en\";\n\nexport const LOCAL_DATA_KEY = (locale: string) => `frimousse/data/${locale}`;\nexport const SESSION_METADATA_KEY = \"frimousse/metadata\";\n\n// Prevent EMOJIBASE_LOCALES to be out of sync with Locale\n{\n  type MissingLocales = Exclude<Locale, (typeof EMOJIBASE_LOCALES)[number]>;\n  type AllLocalesPresent = MissingLocales extends never\n    ? true\n    : `Missing locales: ${MissingLocales}`;\n  const _allLocalesPresent: AllLocalesPresent = true;\n  _allLocalesPresent;\n}\n\ntype GetEmojiDataOptions = {\n  locale: Locale;\n  emojiVersion?: number;\n  emojibaseUrl?: string;\n  signal?: AbortSignal;\n};\n\ntype LocalData = {\n  data: EmojiData;\n  metadata: {\n    emojisEtag: string | null;\n    messagesEtag: string | null;\n  };\n};\n\ntype SessionMetadata = {\n  emojiVersion: number;\n  countryFlags: boolean;\n};\n\nasync function fetchEtag(url: string, signal?: AbortSignal) {\n  try {\n    const response = await fetch(url, { method: \"HEAD\", signal });\n\n    return response.headers.get(\"etag\");\n  } catch (_) {\n    return null;\n  }\n}\n\nasync function fetchEmojibaseData(\n  baseUrl: string,\n  locale: Locale,\n  signal?: AbortSignal,\n) {\n  const [{ emojis, emojisEtag }, { messages, messagesEtag }] =\n    await Promise.all([\n      fetch(EMOJIBASE_EMOJIS_URL(baseUrl, locale), { signal }).then(\n        async (response) => {\n          return {\n            emojis: (await response.json()) as EmojibaseEmoji[],\n            emojisEtag: response.headers.get(\"etag\"),\n          };\n        },\n      ),\n      fetch(EMOJIBASE_MESSAGES_URL(baseUrl, locale), { signal }).then(\n        async (response) => {\n          return {\n            messages: (await response.json()) as EmojibaseMessagesDataset,\n            messagesEtag: response.headers.get(\"etag\"),\n          };\n        },\n      ),\n    ]);\n\n  return {\n    emojis,\n    messages,\n    emojisEtag,\n    messagesEtag,\n  };\n}\n\nasync function fetchEmojibaseEtags(\n  baseUrl: string,\n  locale: Locale,\n  signal?: AbortSignal,\n) {\n  const [emojisEtag, messagesEtag] = await Promise.all([\n    fetchEtag(EMOJIBASE_EMOJIS_URL(baseUrl, locale), signal),\n    fetchEtag(EMOJIBASE_MESSAGES_URL(baseUrl, locale), signal),\n  ]);\n\n  return {\n    emojisEtag,\n    messagesEtag,\n  };\n}\n\nexport function getEmojibaseSkinToneVariations(\n  emoji: EmojibaseEmojiWithGroup,\n): Record<Exclude<SkinTone, \"none\">, string> | undefined {\n  if (!emoji.skins) {\n    return;\n  }\n\n  const skinToneVariations = emoji.skins.filter(\n    (emoji) => typeof emoji.tone === \"number\",\n  );\n\n  return skinToneVariations.reduce(\n    (result, emoji) => {\n      const skinTone = SKIN_TONES[emoji.tone as number]!;\n\n      result[skinTone as Exclude<SkinTone, \"none\">] = emoji.emoji;\n\n      return result;\n    },\n    {} as Record<Exclude<SkinTone, \"none\">, string>,\n  );\n}\n\nasync function fetchEmojiData(\n  baseUrl: string,\n  locale: Locale,\n  signal?: AbortSignal,\n): Promise<EmojiData> {\n  const { emojis, emojisEtag, messages, messagesEtag } =\n    await fetchEmojibaseData(baseUrl, locale, signal);\n  const countryFlagsSubgroup = messages.subgroups.find(\n    (subgroup) =>\n      subgroup.key === \"country-flag\" || subgroup.key === \"subdivision-flag\",\n  );\n\n  // Filter out the component/modifier category and its emojis\n  const filteredGroups = messages.groups.filter(\n    (group) => group.key !== \"component\",\n  );\n  const filteredEmojis = emojis.filter((emoji) => {\n    return \"group\" in emoji;\n  }) as EmojibaseEmojiWithGroup[];\n\n  const categories = filteredGroups.map((group) => ({\n    index: group.order,\n    label: capitalize(group.message),\n  }));\n  const skinTones = messages.skinTones.reduce(\n    (skinTones, skinTone) => {\n      skinTones[skinTone.key] = capitalize(skinTone.message);\n\n      return skinTones;\n    },\n    {} as Record<SkinTone, string>,\n  );\n\n  const formattedEmojis = filteredEmojis.map((emoji) => {\n    return {\n      emoji: emoji.emoji,\n      category: emoji.group,\n      version: emoji.version,\n      label: capitalize(emoji.label),\n      tags: emoji.tags ?? [],\n      countryFlag:\n        (countryFlagsSubgroup &&\n          emoji.subgroup === countryFlagsSubgroup.order) ||\n        undefined,\n      skins: getEmojibaseSkinToneVariations(emoji),\n    } satisfies EmojiDataEmoji;\n  });\n\n  const emojiData: EmojiData = {\n    locale,\n    emojis: formattedEmojis,\n    categories,\n    skinTones,\n  };\n\n  setStorage(localStorage, LOCAL_DATA_KEY(locale), {\n    data: emojiData,\n    metadata: {\n      emojisEtag,\n      messagesEtag,\n    },\n  });\n\n  return emojiData;\n}\n\nfunction getSessionMetadata(\n  emojis: EmojiDataEmoji[],\n  emojiVersion?: number,\n): SessionMetadata {\n  const versionEmojis = new Map<number, string>();\n\n  for (const emoji of emojis) {\n    if (!versionEmojis.has(emoji.version)) {\n      versionEmojis.set(emoji.version, emoji.emoji);\n    }\n  }\n\n  const descendingVersions = [...versionEmojis.keys()].sort((a, b) => b - a);\n  const highestVersion = descendingVersions[0] ?? 0;\n\n  const supportsCountryFlags = isEmojiSupported(\"🇪🇺\");\n\n  if (typeof emojiVersion === \"number\") {\n    return {\n      emojiVersion,\n      countryFlags: supportsCountryFlags,\n    };\n  }\n\n  for (const version of descendingVersions) {\n    const emoji = versionEmojis.get(version)!;\n\n    if (isEmojiSupported(emoji)) {\n      return {\n        emojiVersion: version,\n        countryFlags: supportsCountryFlags,\n      };\n    }\n  }\n\n  return {\n    emojiVersion: highestVersion,\n    countryFlags: supportsCountryFlags,\n  };\n}\n\nconst validateSessionMetadata = $.object<SessionMetadata>({\n  emojiVersion: $.number,\n  countryFlags: $.boolean,\n});\n\nconst validateLocalData = $.object<LocalData>({\n  data: $.object({\n    locale: $.string as $.Validator<Locale>,\n    emojis: $.naiveArray(\n      $.object({\n        emoji: $.string,\n        category: $.number,\n        label: $.string,\n        version: $.number,\n        tags: $.naiveArray($.string),\n        countryFlag: $.optional($.boolean as $.Validator<true>),\n        skins: $.optional(\n          $.object({\n            light: $.string,\n            \"medium-light\": $.string,\n            medium: $.string,\n            \"medium-dark\": $.string,\n            dark: $.string,\n          }),\n        ),\n      }),\n    ),\n    categories: $.naiveArray(\n      $.object({\n        index: $.number,\n        label: $.string,\n      }),\n    ),\n    skinTones: $.object({\n      light: $.string,\n      \"medium-light\": $.string,\n      medium: $.string,\n      \"medium-dark\": $.string,\n      dark: $.string,\n    }),\n  }),\n  metadata: $.object({\n    emojisEtag: $.nullable($.string),\n    messagesEtag: $.nullable($.string),\n  }),\n});\n\nexport async function getEmojiData({\n  locale,\n  emojiVersion,\n  emojibaseUrl,\n  signal,\n}: GetEmojiDataOptions): Promise<EmojiData> {\n  const baseUrl =\n    typeof emojibaseUrl === \"string\"\n      ? emojibaseUrl\n      : `https://cdn.jsdelivr.net/npm/emojibase-data@${typeof emojiVersion === \"number\" ? Math.floor(emojiVersion) : \"latest\"}`;\n  let sessionMetadata = getStorage<SessionMetadata>(\n    sessionStorage,\n    SESSION_METADATA_KEY,\n    validateSessionMetadata,\n  );\n  const localData = getStorage<LocalData>(\n    localStorage,\n    LOCAL_DATA_KEY(locale),\n    validateLocalData,\n  );\n\n  let data: EmojiData;\n\n  if (!localData) {\n    // No local data\n    data = await fetchEmojiData(baseUrl, locale, signal);\n  } else if (sessionMetadata) {\n    // ETags are used to check if the data is up-to-date but only\n    // once per session, so if the session metadata is already set,\n    // the local data can be used\n    data = localData.data;\n  } else {\n    // Check ETags to see if the local data is up-to-date,\n    // but if that fails, the possibly-stale local data is used\n    try {\n      const { emojisEtag, messagesEtag } = await fetchEmojibaseEtags(\n        baseUrl,\n        locale,\n        signal,\n      );\n\n      data =\n        !emojisEtag ||\n        !messagesEtag ||\n        emojisEtag !== localData.metadata.emojisEtag ||\n        messagesEtag !== localData.metadata.messagesEtag\n          ? await fetchEmojiData(baseUrl, locale, signal)\n          : localData.data;\n    } catch {\n      data = localData.data;\n    }\n  }\n\n  // Set the session metadata if needed\n  sessionMetadata ??= getSessionMetadata(data.emojis, emojiVersion);\n  setStorage(sessionStorage, SESSION_METADATA_KEY, sessionMetadata);\n\n  // Filter out unsupported emojis\n  const filteredEmojis = data.emojis.filter((emoji) => {\n    const isSupportedVersion = emoji.version <= sessionMetadata.emojiVersion;\n\n    return emoji.countryFlag\n      ? isSupportedVersion && sessionMetadata.countryFlags\n      : isSupportedVersion;\n  });\n\n  return {\n    locale,\n    emojis: filteredEmojis,\n    categories: data.categories,\n    skinTones: data.skinTones,\n  };\n}\n\nexport function validateLocale(locale: string): Locale {\n  if (!EMOJIBASE_LOCALES.includes(locale as Locale)) {\n    console.warn(\n      `Locale \"${locale}\" is not supported, using \"${EMOJIBASE_DEFAULT_LOCALE}\" instead.`,\n    );\n\n    return EMOJIBASE_DEFAULT_LOCALE;\n  }\n\n  return locale as Locale;\n}\n\nexport function validateSkinTone(skinTone: string): SkinTone {\n  if (!SKIN_TONES.includes(skinTone as SkinTone)) {\n    console.warn(`Skin tone \"${skinTone}\" is not valid, using \"none\" instead.`);\n\n    return \"none\";\n  }\n\n  return skinTone as SkinTone;\n}\n","export function chunk<T>(array: T[], size: number): T[][] {\n  const chunks: T[][] = [];\n\n  if (size <= 0) {\n    return chunks;\n  }\n\n  for (let i = 0, j = array.length; i < j; i += size) {\n    chunks.push(array.slice(i, i + size));\n  }\n\n  return chunks;\n}\n","import type {\n  Emoji,\n  EmojiData,\n  EmojiDataEmoji,\n  EmojiPickerData,\n  EmojiPickerDataCategory,\n  EmojiPickerDataRow,\n  EmojiPickerEmoji,\n  SkinTone,\n} from \"../types\";\nimport { chunk } from \"../utils/chunk\";\n\nexport function searchAndExcludeEmojis(\n  emojis: EmojiDataEmoji[],\n  search?: string,\n  excludedEmojis?: Array<string>,\n) {\n  if (!search && !excludedEmojis) {\n    return emojis;\n  }\n\n  const searchText = search?.toLowerCase().trim() ?? \"\";\n  const scores = new WeakMap<Emoji, number>();\n\n  return emojis\n    .filter((emoji) => {\n      if (excludedEmojis?.includes(emoji.emoji)) {\n        return false;\n      }\n\n      if (searchText !== \"\") {\n        let score = 0;\n\n        if (emoji.label.toLowerCase().includes(searchText)) {\n          score += 10;\n        }\n\n        for (const tag of emoji.tags) {\n          if (tag.toLowerCase().includes(searchText)) {\n            score += 1;\n          }\n        }\n\n        if (score > 0) {\n          scores.set(emoji, score);\n\n          return true;\n        }\n\n        return false;\n      }\n\n      return true;\n    })\n    .sort((a, b) => (scores.get(b) ?? 0) - (scores.get(a) ?? 0));\n}\n\nexport function getEmojiPickerData(\n  data: EmojiData,\n  columns: number,\n  skinTone: SkinTone | undefined,\n  search: string,\n  excludedEmojis?: Array<string>,\n): EmojiPickerData {\n  const emojis = searchAndExcludeEmojis(data.emojis, search, excludedEmojis);\n  const rows: EmojiPickerDataRow[] = [];\n  const categories: EmojiPickerDataCategory[] = [];\n  const categoriesStartRowIndices: number[] = [];\n  const emojisByCategory: Record<number, EmojiPickerEmoji[]> = {};\n  let categoryIndex = 0;\n  let startRowIndex = 0;\n\n  for (const emoji of emojis) {\n    if (!emojisByCategory[emoji.category]) {\n      emojisByCategory[emoji.category] = [];\n    }\n\n    emojisByCategory[emoji.category]!.push({\n      emoji:\n        skinTone && skinTone !== \"none\" && emoji.skins\n          ? emoji.skins[skinTone]\n          : emoji.emoji,\n      label: emoji.label,\n      isCustom: emoji.isCustom,\n    });\n  }\n\n  for (const category of data.categories) {\n    const categoryEmojis = emojisByCategory[category.index];\n\n    if (!categoryEmojis || categoryEmojis.length === 0) {\n      continue;\n    }\n\n    const categoryRows = chunk(Array.from(categoryEmojis), columns).map(\n      (emojis) => ({\n        categoryIndex,\n        emojis,\n      }),\n    );\n\n    rows.push(...categoryRows);\n    categories.push({\n      label: category.label,\n      isCustom: category.isCustom,\n      rowsCount: categoryRows.length,\n      startRowIndex,\n    });\n\n    categoriesStartRowIndices.push(startRowIndex);\n\n    categoryIndex++;\n    startRowIndex += categoryRows.length;\n  }\n\n  return {\n    count: emojis.length,\n    categories,\n    categoriesStartRowIndices,\n    rows,\n    skinTones: data.skinTones,\n  };\n}\n","import { useCallback, useDeferredValue, useMemo } from \"react\";\nimport type * as EmojiPicker from \"./components/emoji-picker\";\nimport {\n  $activeEmoji,\n  sameEmojiPickerEmoji,\n  useEmojiPickerStore,\n} from \"./store\";\nimport type { Emoji, SkinTone, SkinToneVariation } from \"./types\";\nimport { getSkinToneVariations } from \"./utils/get-skin-tone-variations\";\nimport { useSelector, useSelectorKey } from \"./utils/store\";\n\n/**\n * Returns the currently active emoji (either hovered or selected\n * via keyboard navigation).\n *\n * @example\n * ```tsx\n * const activeEmoji = useActiveEmoji();\n * ```\n *\n * It can be used to build a preview area next to the list.\n *\n * @example\n * ```tsx\n * const activeEmoji = useActiveEmoji();\n *\n * <div>\n *   {activeEmoji ? (\n *     <span>{activeEmoji.emoji} {activeEmoji.label}</span>\n *   ) : (\n *     <span>Select an emoji…</span>\n *   )}\n * </div>\n * ```\n *\n * @see\n * If you prefer to use a component rather than a hook,\n * {@link EmojiPicker.ActiveEmoji|`<EmojiPicker.ActiveEmoji />`} is also available.\n */\nexport function useActiveEmoji(): Emoji | undefined {\n  const store = useEmojiPickerStore();\n  const activeEmoji = useSelector(store, $activeEmoji, sameEmojiPickerEmoji);\n\n  return useDeferredValue(activeEmoji);\n}\n\n/**\n * Returns the current skin tone and a function to change it.\n *\n * @example\n * ```tsx\n * const [skinTone, setSkinTone] = useSkinTone();\n * ```\n *\n * It can be used to build a custom skin tone selector: pass an emoji\n * you want to use as visual (by default, ✋) and it will return its skin tone\n * variations.\n *\n * @example\n * ```tsx\n * const [skinTone, setSkinTone, skinToneVariations] = useSkinTone(\"👋\");\n *\n * // (👋) (👋🏻) (👋🏼) (👋🏽) (👋🏾) (👋🏿)\n * skinToneVariations.map(({ skinTone, emoji }) => (\n *   <button key={skinTone} onClick={() => setSkinTone(skinTone)}>\n *     {emoji}\n *   </button>\n * ));\n * ```\n *\n * @see\n * If you prefer to use a component rather than a hook,\n * {@link EmojiPicker.SkinTone|`<EmojiPicker.SkinTone />`} is also available.\n *\n * @see\n * An already-built skin tone selector is also available,\n * {@link EmojiPicker.SkinToneSelector|`<EmojiPicker.SkinToneSelector />`}.\n */\nexport function useSkinTone(\n  emoji = \"✋\",\n): [SkinTone, (skinTone: SkinTone) => void, SkinToneVariation[]] {\n  const store = useEmojiPickerStore();\n  const skinTone = useSelectorKey(store, \"skinTone\");\n  const skinToneVariations = useMemo(\n    () => getSkinToneVariations(emoji),\n    [emoji],\n  );\n\n  const setSkinTone = useCallback((skinTone: SkinTone) => {\n    store.set({ skinTone });\n  }, []);\n\n  return [skinTone, setSkinTone, skinToneVariations];\n}\n","import {\n  createContext,\n  type PropsWithChildren,\n  useCallback,\n  useContext,\n  useDebugValue,\n  useEffect,\n  useState,\n} from \"react\";\n\n// A tiny store with batched updates, context support, and selectors.\n\nexport type Store<T> = {\n  get: () => T;\n  set: (partial: Partial<T> | ((state: T) => Partial<T>)) => void;\n  subscribe: (subscriber: (state: T) => void) => () => void;\n};\n\nexport function createStore<T extends object>(\n  createInitialState: (set: Store<T>[\"set\"], get: Store<T>[\"get\"]) => T,\n): Store<T> {\n  let state = {} as T;\n  let pending: T | null = null;\n  let frameId: number | null = null;\n  const subscribers = new Set<(store: T) => void>();\n\n  const flush = () => {\n    if (pending) {\n      state = pending;\n      pending = null;\n\n      for (const subscriber of subscribers) {\n        subscriber(state);\n      }\n    }\n\n    frameId = null;\n  };\n\n  const get = () => pending ?? state;\n\n  const set: Store<T>[\"set\"] = (partial) => {\n    pending ??= state;\n    Object.assign(\n      pending as T,\n      typeof partial === \"function\"\n        ? (partial as (state: T) => Partial<T>)(get())\n        : partial,\n    );\n\n    if (!frameId) {\n      frameId = requestAnimationFrame(flush);\n    }\n  };\n\n  const subscribe = (subscriber: (state: T) => void) => {\n    subscribers.add(subscriber);\n\n    return () => subscribers.delete(subscriber);\n  };\n\n  state = createInitialState(set, get);\n\n  return { get, set, subscribe };\n}\n\nexport function useCreateStore<T>(createStore: () => Store<T>) {\n  const [store] = useState(createStore);\n\n  return store;\n}\n\nexport function createStoreContext<T>(missingProviderError?: string) {\n  const Context = createContext<Store<T> | null>(null);\n\n  const useStore = () => {\n    const store = useContext(Context);\n\n    if (!store) {\n      throw new Error(missingProviderError);\n    }\n\n    return store as Store<T>;\n  };\n\n  const Provider = ({\n    store,\n    children,\n  }: PropsWithChildren<{ store: Store<T> }>) => {\n    return <Context.Provider value={store}>{children}</Context.Provider>;\n  };\n\n  return { useStore, Provider };\n}\n\nexport function useSelector<T, S>(\n  store: Store<T>,\n  selector: (state: T) => S,\n  compare: (a: S, b: S) => boolean = Object.is,\n) {\n  const [slice, setSlice] = useState(() => selector(store.get()));\n\n  useEffect(() => {\n    return store.subscribe(() => {\n      const nextSlice = selector(store.get());\n\n      setSlice((previousSlice) =>\n        compare(previousSlice, nextSlice) ? previousSlice : nextSlice,\n      );\n    });\n  }, [store, selector, compare]);\n\n  useDebugValue(slice);\n\n  return slice;\n}\n\nexport function useSelectorKey<T, K extends keyof T>(\n  store: Store<T>,\n  key: K,\n  compare?: (a: T[K], b: T[K]) => boolean,\n) {\n  const selector = useCallback((state: T) => state[key], [key]);\n\n  return useSelector(store, selector, compare);\n}\n","import type { RefObject } from \"react\";\nimport type {\n  CustomEmoji,\n  EmojiDataCategory,\n  EmojiPickerData,\n  EmojiPickerDataRow,\n  EmojiPickerEmoji,\n  EmojiPickerRootProps,\n  Locale,\n  SkinTone,\n} from \"./types\";\nimport { createStore, createStoreContext } from \"./utils/store\";\n\nconst VIEWPORT_OVERSCAN = 2;\n\ntype Interaction = \"keyboard\" | \"pointer\" | \"none\";\n\nexport type EmojiPickerStore = {\n  locale: Locale;\n  columns: number;\n  sticky: boolean;\n  skinTone: SkinTone;\n  excludedEmojis?: Array<string>;\n  customCategories?: Array<EmojiDataCategory>;\n  customEmojis?: Array<CustomEmoji>;\n  onEmojiSelect: NonNullable<EmojiPickerRootProps[\"onEmojiSelect\"]>;\n\n  data: EmojiPickerData | null | undefined;\n  search: string;\n  interaction: Interaction;\n  activeColumnIndex: number;\n  activeRowIndex: number;\n\n  rowHeight: number | null;\n  categoryHeaderHeight: number | null;\n  viewportWidth: number | null;\n  viewportHeight: number | null;\n\n  viewportStartCategoryIndex: number;\n  viewportStartRowIndex: number;\n  viewportEndRowIndex: number;\n\n  rootRef: RefObject<HTMLDivElement> | null;\n  searchRef: RefObject<HTMLInputElement> | null;\n  viewportRef: RefObject<HTMLDivElement> | null;\n  listRef: RefObject<HTMLDivElement> | null;\n\n  updateViewportState: (changes?: Partial<EmojiPickerStore>) => void;\n\n  onDataChange: (data: EmojiPickerData) => void;\n  onSearchChange: (search: string) => void;\n  onActiveEmojiChange: (\n    interaction: Exclude<Interaction, \"none\">,\n    activeColumnIndex: number,\n    activeRowIndex: number,\n  ) => void;\n  onActiveEmojiReset: () => void;\n  onRowHeightChange: (rowHeight: number) => void;\n  onCategoryHeaderHeightChange: (categoryHeaderHeight: number) => void;\n  onViewportSizeChange: (viewportWidth: number, viewportHeight: number) => void;\n  onViewportScroll: (scrollY: number) => void;\n};\n\nexport function createEmojiPickerStore(\n  onEmojiSelect: NonNullable<EmojiPickerRootProps[\"onEmojiSelect\"]>,\n  initialLocale: Locale,\n  initialColumns: number,\n  initialSticky: boolean,\n  initialSkinTone: SkinTone,\n  initialExcludedEmojis?: Array<string>,\n  initialCustomCategories?: Array<EmojiDataCategory>,\n  initialCustomEmojis?: Array<CustomEmoji>,\n) {\n  let viewportScrollY = 0;\n\n  return createStore<EmojiPickerStore>((set, get) => ({\n    locale: initialLocale,\n    columns: initialColumns,\n    sticky: initialSticky,\n    skinTone: initialSkinTone,\n    excludedEmojis: initialExcludedEmojis,\n    customCategories: initialCustomCategories,\n    customEmojis: initialCustomEmojis,\n    onEmojiSelect,\n\n    data: null,\n    search: \"\",\n    interaction: \"none\",\n    activeColumnIndex: 0,\n    activeRowIndex: 0,\n\n    rowHeight: null,\n    categoryHeaderHeight: null,\n    viewportWidth: null,\n    viewportHeight: null,\n\n    viewportCurrentCategoryIndex: null,\n    viewportStartCategoryIndex: 0,\n    viewportStartRowIndex: 0,\n    viewportEndRowIndex: 0,\n\n    rootRef: null,\n    searchRef: null,\n    viewportRef: null,\n    listRef: null,\n\n    updateViewportState: (partial?: Partial<EmojiPickerStore>) => {\n      const state = get();\n\n      const data = partial?.data ?? state.data;\n      const categoryHeaderHeight =\n        partial?.categoryHeaderHeight ?? state.categoryHeaderHeight;\n      const rowHeight = partial?.rowHeight ?? state.rowHeight;\n      const viewportHeight = partial?.viewportHeight ?? state.viewportHeight;\n\n      if (\n        !data ||\n        data.rows.length === 0 ||\n        !categoryHeaderHeight ||\n        !rowHeight ||\n        !viewportHeight\n      ) {\n        return set({\n          ...partial,\n          viewportStartCategoryIndex: 0,\n          viewportStartRowIndex: 0,\n          viewportEndRowIndex: 0,\n        });\n      }\n\n      let previousCategoryHeadersHeight = 0;\n      let categoryIndex = 0;\n\n      for (const category of data.categories) {\n        const categoryY =\n          categoryIndex++ * categoryHeaderHeight +\n          category.startRowIndex * rowHeight;\n\n        if (categoryY < viewportScrollY) {\n          previousCategoryHeadersHeight += categoryHeaderHeight;\n        } else {\n          break;\n        }\n      }\n\n      const totalHeight =\n        data.categories.length * categoryHeaderHeight +\n        data.rows.length * rowHeight;\n\n      const overscanStart = Math.floor((VIEWPORT_OVERSCAN * rowHeight) / 2);\n      const overscanEnd = Math.ceil((VIEWPORT_OVERSCAN * rowHeight) / 2);\n\n      // Adjust the scroll position to account for previous category headers\n      const viewportStartY = Math.min(\n        viewportScrollY - previousCategoryHeadersHeight - overscanStart,\n        totalHeight - viewportHeight,\n      );\n\n      const viewportEndY = viewportStartY + viewportHeight + overscanEnd;\n\n      const viewportStartRowIndex = Math.max(\n        0,\n        Math.floor(viewportStartY / rowHeight),\n      );\n      const viewportEndRowIndex = Math.min(\n        data.rows.length - 1,\n        Math.ceil(viewportEndY / rowHeight),\n      );\n      const viewportStartCategoryIndex =\n        data.rows[viewportStartRowIndex]?.categoryIndex;\n\n      if (viewportStartCategoryIndex === undefined && partial) {\n        return set(partial);\n      }\n\n      return set({\n        ...partial,\n        viewportStartCategoryIndex,\n        viewportStartRowIndex,\n        viewportEndRowIndex,\n      });\n    },\n\n    onDataChange: (data: EmojiPickerData) => {\n      get().updateViewportState({\n        data,\n\n        // Reset active emoji when data changes\n        activeColumnIndex: 0,\n        activeRowIndex: 0,\n      });\n    },\n    onSearchChange: (search: string) => {\n      set({ search, interaction: search ? \"keyboard\" : \"none\" });\n    },\n    onActiveEmojiChange: (\n      interaction: Exclude<Interaction, \"none\">,\n      activeColumnIndex: number,\n      activeRowIndex: number,\n    ) => {\n      set({\n        interaction,\n        activeColumnIndex,\n        activeRowIndex,\n      });\n\n      if (interaction !== \"keyboard\") {\n        return;\n      }\n\n      const {\n        listRef,\n        viewportRef,\n        sticky,\n        rowHeight,\n        viewportHeight,\n        categoryHeaderHeight,\n      } = get();\n\n      const list = listRef?.current;\n      const viewport = viewportRef?.current;\n\n      if (\n        !list ||\n        !viewport ||\n        !rowHeight ||\n        !categoryHeaderHeight ||\n        !viewportHeight\n      ) {\n        return;\n      }\n\n      const rowIndex = activeRowIndex;\n\n      if (rowIndex === 0) {\n        viewport.scrollTo({\n          top: 0,\n          behavior: \"instant\",\n        });\n      }\n\n      const row = list.querySelector(`[aria-rowindex=\"${rowIndex}\"]`);\n\n      if (!(row instanceof HTMLElement)) {\n        return;\n      }\n\n      const rowY = row.offsetTop;\n      const rowComputedStyle = getComputedStyle(row);\n      const rowScrollMarginTop = Number.parseFloat(\n        rowComputedStyle.scrollMarginTop,\n      );\n      const rowScrollMarginBottom = Number.parseFloat(\n        rowComputedStyle.scrollMarginBottom,\n      );\n\n      let viewportStartY = viewportScrollY + rowScrollMarginTop;\n\n      // Account for headers if they are sticky and if the row is in the upper half of the viewport\n      if (sticky && rowY < viewportScrollY + viewportHeight / 2) {\n        viewportStartY += categoryHeaderHeight;\n      }\n\n      const viewportEndY =\n        viewportStartY + viewportHeight - rowScrollMarginBottom;\n\n      if (rowY < viewportStartY || rowY + rowHeight > viewportEndY) {\n        viewport.scrollTo({\n          // Align to the viewport's top or bottom based on the row's position\n          top: Math.max(\n            rowY < viewportStartY + categoryHeaderHeight\n              ? rowY -\n                  Math.max(\n                    sticky ? categoryHeaderHeight : 0,\n                    rowScrollMarginTop,\n                  )\n              : rowY - viewportHeight + rowHeight + rowScrollMarginBottom,\n            0,\n          ),\n          behavior: \"instant\",\n        });\n      }\n    },\n    onActiveEmojiReset: () => {\n      set({\n        interaction: \"none\",\n\n        // Reset active emoji when interaction goes back to none\n        activeColumnIndex: 0,\n        activeRowIndex: 0,\n      });\n    },\n    onRowHeightChange: (rowHeight: number) => {\n      get().updateViewportState({ rowHeight });\n    },\n    onCategoryHeaderHeightChange: (categoryHeaderHeight: number) => {\n      get().updateViewportState({ categoryHeaderHeight });\n    },\n    onViewportSizeChange: (viewportWidth: number, viewportHeight: number) => {\n      get().updateViewportState({ viewportWidth, viewportHeight });\n    },\n    onViewportScroll: (scrollY: number) => {\n      viewportScrollY = scrollY;\n\n      get().updateViewportState();\n    },\n  }));\n}\n\nexport const {\n  useStore: useEmojiPickerStore,\n  Provider: EmojiPickerStoreProvider,\n} = createStoreContext<EmojiPickerStore>(\"EmojiPicker.Root is missing.\");\n\nexport function $search(state: EmojiPickerStore) {\n  return state.search;\n}\n\nexport function $activeEmoji(\n  state: EmojiPickerStore,\n): EmojiPickerEmoji | undefined {\n  if (state.interaction === \"none\") {\n    return undefined;\n  }\n\n  const activeEmoji =\n    state.data?.rows[state.activeRowIndex]?.emojis[state.activeColumnIndex];\n\n  return activeEmoji;\n}\n\nexport function $isEmpty(state: EmojiPickerStore) {\n  return (\n    state.data === undefined ||\n    (typeof state.data?.count === \"number\" && state.data.count === 0)\n  );\n}\n\nexport function $isLoading(state: EmojiPickerStore) {\n  return (\n    state.data === null ||\n    state.viewportHeight === null ||\n    state.rowHeight === null ||\n    state.categoryHeaderHeight === null\n  );\n}\n\nexport function $rowsCount(state: EmojiPickerStore) {\n  return state.data?.rows.length;\n}\n\nexport function $categoriesCount(state: EmojiPickerStore) {\n  return state.data?.categories.length;\n}\n\nexport function $categoriesRowsStartIndices(state: EmojiPickerStore) {\n  return state.data?.categoriesStartRowIndices;\n}\n\nexport function $skinTones(state: EmojiPickerStore) {\n  return state.data?.skinTones;\n}\n\nexport function sameEmojiPickerEmoji(\n  a: EmojiPickerEmoji | undefined,\n  b: EmojiPickerEmoji | undefined,\n) {\n  return a?.emoji === b?.emoji;\n}\n\nexport function sameEmojiPickerRow(\n  a: EmojiPickerDataRow | undefined,\n  b: EmojiPickerDataRow | undefined,\n) {\n  if (a?.categoryIndex !== b?.categoryIndex) {\n    return false;\n  }\n\n  if (a?.emojis.length !== b?.emojis.length) {\n    return false;\n  }\n\n  return Boolean(\n    a?.emojis.every((emoji, index) =>\n      sameEmojiPickerEmoji(emoji, b?.emojis[index]),\n    ),\n  );\n}\n","import { SKIN_TONES } from \"../constants\";\nimport type { SkinTone, SkinToneVariation } from \"../types\";\n\nconst ZWJ = \"\\u200D\";\nconst EMOJI_MODIFIER_BASE = /\\p{Emoji_Modifier_Base}/u;\nconst ENDING_VARIATION_SELECTOR = /\\uFE0F$/;\nconst SKIN_TONE_MODIFIERS =\n  /\\u{1F3FB}|\\u{1F3FC}|\\u{1F3FD}|\\u{1F3FE}|\\u{1F3FF}/gu;\n\nconst skinToneModifiers: Record<Exclude<SkinTone, \"none\">, string> = {\n  light: \"\\u{1F3FB}\",\n  \"medium-light\": \"\\u{1F3FC}\",\n  medium: \"\\u{1F3FD}\",\n  \"medium-dark\": \"\\u{1F3FE}\",\n  dark: \"\\u{1F3FF}\",\n};\n\nexport function getSkinToneVariation(emoji: string, skinTone: SkinTone) {\n  // The emoji does not support skin tones\n  if (!emoji.split(ZWJ).some((segment) => EMOJI_MODIFIER_BASE.test(segment))) {\n    return emoji;\n  }\n\n  const baseEmoji = emoji\n    .split(ZWJ)\n    .map((segment) => segment.replace(SKIN_TONE_MODIFIERS, \"\"))\n    .join(ZWJ);\n\n  if (skinTone === \"none\") {\n    return baseEmoji;\n  }\n\n  return baseEmoji\n    .split(ZWJ)\n    .map((segment, _, segments) => {\n      const isZwjSequence = segments.length > 1;\n\n      if (\n        !EMOJI_MODIFIER_BASE.test(segment) ||\n        // The 🤝 emoji should not be toned within a ZWJ sequence (e.g. 🧑‍🤝‍🧑)\n        (isZwjSequence && segment === \"🤝\")\n      ) {\n        return segment;\n      }\n\n      return (\n        segment.replace(ENDING_VARIATION_SELECTOR, \"\") +\n        skinToneModifiers[skinTone]\n      );\n    })\n    .join(ZWJ);\n}\n\nexport function getSkinToneVariations(emoji: string): SkinToneVariation[] {\n  return SKIN_TONES.map((skinTone) => ({\n    skinTone,\n    emoji: getSkinToneVariation(emoji, skinTone),\n  }));\n}\n","export function shallow(a: unknown, b: unknown): boolean {\n  if (Object.is(a, b)) {\n    return true;\n  }\n\n  if (\n    typeof a !== \"object\" ||\n    typeof b !== \"object\" ||\n    a === null ||\n    b === null\n  ) {\n    return false;\n  }\n\n  if (Array.isArray(a) !== Array.isArray(b)) {\n    return false;\n  }\n\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  return keysA.every(\n    (key) => key in b && a[key as keyof typeof a] === b[key as keyof typeof b],\n  );\n}\n","export function noop(..._: unknown[]) {\n  return;\n}\n\nexport async function noopAsync(..._: unknown[]) {\n  return;\n}\n","const DEFAULT_TIMEOUT = 10;\nconst DEFAULT_MAX_TIMEOUT = 50;\n\n// Safari doesn't support requestIdleCallback yet\nexport function requestIdleCallback(\n  callback: IdleRequestCallback,\n  options?: IdleRequestOptions,\n) {\n  let id: ReturnType<typeof window.requestIdleCallback> | null = null;\n\n  if (typeof window.requestIdleCallback === \"function\") {\n    id = window.requestIdleCallback(callback, options);\n  } else {\n    const start = Date.now();\n\n    id = window.setTimeout(() => {\n      callback({\n        didTimeout: false,\n        timeRemaining: () =>\n          Math.max(\n            0,\n            (options?.timeout ?? DEFAULT_MAX_TIMEOUT) - (Date.now() - start),\n          ),\n      });\n    }, DEFAULT_TIMEOUT);\n  }\n\n  return () => {\n    if (typeof window.cancelIdleCallback === \"function\") {\n      window.cancelIdleCallback(id);\n    } else {\n      window.clearTimeout(id);\n    }\n  };\n}\n","import { useEffect, useLayoutEffect as useOriginalLayoutEffect } from \"react\";\n\n// On React 18.2.0 and earlier, useLayoutEffect triggers a warning when executed on the server\nexport const useLayoutEffect =\n  /* v8 ignore next */\n  typeof window !== \"undefined\" ? useOriginalLayoutEffect : useEffect;\n","import { useCallback, useRef } from \"react\";\nimport { useLayoutEffect } from \"./use-layout-effect\";\n\nexport function useStableCallback<A extends unknown[], R>(\n  callback: (...args: A) => R,\n): (...args: A) => R {\n  const callbackRef = useRef(callback);\n\n  useLayoutEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useCallback((...args: A): R => {\n    return callbackRef.current(...args);\n  }, []);\n}\n"],"mappings":"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","names":["emoji_picker_exports","__export","EmojiPickerActiveEmoji","EmojiPickerEmpty","EmojiPickerList","EmojiPickerLoading","EmojiPickerRoot","EmojiPickerSearch","EmojiPickerSkinTone","EmojiPickerSkinToneSelector","EmojiPickerViewport","Fragment","forwardRef","memo","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","EMOJI_FONT_FAMILY","SKIN_TONES","capitalize","string","CANVAS_SIZE","context","isEmojiSupported","emoji","EMOJI_FONT_FAMILY","blue","red","i","getStorage","storage","key","validate","item","value","setStorage","optional","validate","data","nullable","string","number","boolean","object","keys","result","key","value","naiveArray","EMOJIBASE_EMOJIS_URL","baseUrl","locale","EMOJIBASE_MESSAGES_URL","EMOJIBASE_LOCALES","EMOJIBASE_DEFAULT_LOCALE","LOCAL_DATA_KEY","SESSION_METADATA_KEY","fetchEtag","url","signal","fetchEmojibaseData","emojis","emojisEtag","messages","messagesEtag","response","fetchEmojibaseEtags","getEmojibaseSkinToneVariations","emoji","result","skinTone","SKIN_TONES","fetchEmojiData","countryFlagsSubgroup","subgroup","filteredGroups","group","filteredEmojis","categories","capitalize","skinTones","formattedEmojis","emojiData","setStorage","getSessionMetadata","emojiVersion","versionEmojis","descendingVersions","a","b","highestVersion","supportsCountryFlags","isEmojiSupported","version","validateSessionMetadata","object","number","boolean","validateLocalData","string","naiveArray","optional","nullable","getEmojiData","emojibaseUrl","sessionMetadata","getStorage","localData","data","isSupportedVersion","validateLocale","validateSkinTone","chunk","array","size","chunks","i","j","searchAndExcludeEmojis","emojis","search","excludedEmojis","searchText","scores","emoji","score","tag","a","b","getEmojiPickerData","data","columns","skinTone","rows","categories","categoriesStartRowIndices","emojisByCategory","categoryIndex","startRowIndex","category","categoryEmojis","categoryRows","chunk","useCallback","useDeferredValue","useMemo","createContext","useCallback","useContext","useDebugValue","useEffect","useState","jsx","createStore","createInitialState","state","pending","frameId","subscribers","flush","subscriber","get","set","partial","subscribe","useCreateStore","store","createStoreContext","missingProviderError","Context","children","useSelector","selector","compare","slice","setSlice","nextSlice","previousSlice","useSelectorKey","key","VIEWPORT_OVERSCAN","createEmojiPickerStore","onEmojiSelect","initialLocale","initialColumns","initialSticky","initialSkinTone","initialExcludedEmojis","initialCustomCategories","initialCustomEmojis","viewportScrollY","createStore","set","get","partial","state","data","categoryHeaderHeight","rowHeight","viewportHeight","previousCategoryHeadersHeight","categoryIndex","category","totalHeight","overscanStart","overscanEnd","viewportStartY","viewportEndY","viewportStartRowIndex","viewportEndRowIndex","viewportStartCategoryIndex","search","interaction","activeColumnIndex","activeRowIndex","listRef","viewportRef","sticky","list","viewport","rowIndex","row","rowY","rowComputedStyle","rowScrollMarginTop","rowScrollMarginBottom","viewportWidth","scrollY","useEmojiPickerStore","EmojiPickerStoreProvider","createStoreContext","$search","$activeEmoji","$isEmpty","$isLoading","$rowsCount","$categoriesCount","$categoriesRowsStartIndices","$skinTones","sameEmojiPickerEmoji","a","b","sameEmojiPickerRow","emoji","index","ZWJ","EMOJI_MODIFIER_BASE","ENDING_VARIATION_SELECTOR","SKIN_TONE_MODIFIERS","skinToneModifiers","getSkinToneVariation","emoji","skinTone","segment","baseEmoji","_","segments","isZwjSequence","getSkinToneVariations","SKIN_TONES","useActiveEmoji","store","useEmojiPickerStore","activeEmoji","useSelector","$activeEmoji","sameEmojiPickerEmoji","useDeferredValue","useSkinTone","emoji","skinTone","useSelectorKey","skinToneVariations","useMemo","getSkinToneVariations","setSkinTone","useCallback","shallow","a","b","keysA","keysB","key","noop","_","requestIdleCallback","callback","options","id","start","useEffect","useOriginalLayoutEffect","useLayoutEffect","useCallback","useRef","useStableCallback","callback","callbackRef","useRef","useLayoutEffect","useCallback","args","jsx","jsxs","EmojiPickerDataHandler","emojiVersion","emojibaseUrl","emojiData","setEmojiData","useState","store","useEmojiPickerStore","locale","useSelectorKey","columns","skinTone","search","excludedEmojis","customCategories","customEmojis","useEffect","controller","signal","getEmojiData","data","categories","customCategory","capitalize","emojis","customEmoji","error","requestIdleCallback","getEmojiPickerData","EmojiPickerRoot","forwardRef","onEmojiSelect","noop","onFocusCapture","onBlurCapture","children","style","sticky","props","forwardedRef","stableOnEmojiSelect","useStableCallback","useCreateStore","createEmojiPickerStore","validateLocale","validateSkinTone","isFocusedWithin","setFocusedWithin","ref","useRef","callbackRef","useCallback","element","useLayoutEffect","handleFocusCapture","event","searchRef","viewportRef","isSearch","isViewport","handleBlurCapture","useImperativeHandle","handleKeyDown","onActiveEmojiChange","interaction","activeColumnIndex","activeRowIndex","activeEmoji","$activeEmoji","columnIndex","rowIndex","previousRowIndex","previousRow","nextRowIndex","nextRow","previousViewportWidth","previousViewportHeight","previousRowHeight","previousCategoryHeaderHeight","unsubscribe","state","viewportWidth","viewportHeight","rowHeight","categoryHeaderHeight","EMOJI_FONT_FAMILY","EmojiPickerStoreProvider","EmojiPickerSearch","value","defaultValue","onChange","isControlled","wasControlled","handleChange","ActiveEmojiAnnouncer","memo","useActiveEmoji","EmojiPickerViewport","onScroll","onKeyDown","rowsCount","useSelector","$rowsCount","categoriesCount","$categoriesCount","handleScroll","resizeObserver","entry","width","height","onViewportSizeChange","listEmojiProps","emoji","isActive","listRowProps","sizer","listCategoryProps","categoryIndex","category","listCategoryHeaderProps","listSizerProps","viewportStartRowIndex","previousHeadersCount","listProps","preventDefault","EmojiPickerListEmoji","Emoji","handleSelect","handlePointerEnter","handlePointerLeave","EmojiPickerListRow","Row","row","sameEmojiPickerRow","EmojiPickerListCategory","CategoryHeader","shallow","EmojiPickerListSizers","useMemo","rowRef","categoryHeaderRef","list","entries","onRowHeightChange","onCategoryHeaderHeightChange","index","DefaultEmojiPickerListCategoryHeader","DefaultEmojiPickerListEmoji","DefaultEmojiPickerListRow","EmojiPickerList","components","viewportEndRowIndex","categoriesRowsStartIndices","$categoriesRowsStartIndices","_","Fragment","EmojiPickerSkinToneSelector","onClick","ariaLabel","skinTones","$skinTones","setSkinTone","skinToneVariations","useSkinTone","skinToneVariationIndex","variation","skinToneVariation","nextSkinTone","nextSkinToneLabel","handleClick","EmojiPickerLoading","$isLoading","EmojiPickerEmptyWithSearch","$search","EmojiPickerEmpty","$isEmpty","EmojiPickerActiveEmoji","EmojiPickerSkinTone"]}